DROP TABLE user_roles
IF EXISTS;
DROP TABLE vote
IF EXISTS;
DROP TABLE meals
IF EXISTS;
DROP TABLE users
IF EXISTS;
DROP TABLE s_meals
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP SEQUENCE global_seq
IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name       VARCHAR(255)            NOT NULL,
  email      VARCHAR(255)            NOT NULL,
  password   VARCHAR(255)            NOT NULL,
  registered TIMESTAMP DEFAULT now() NOT NULL,
  enabled    BOOLEAN DEFAULT TRUE    NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx
  ON USERS (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id)
    ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name    VARCHAR(255) NOT NULL,
  address VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX restaurants_unique_name_address_idx
  ON restaurants (name, address);

CREATE TABLE s_meals
(
  id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  description VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX s_meals_unique_description_idx
  ON s_meals (description);

CREATE TABLE meals
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  date_meal     DATE    NOT NULL,
  meal_id       INTEGER NOT NULL,
  restaurant_id INTEGER NOT NULL,
  price         INTEGER NOT NULL,
  FOREIGN KEY (meal_id) REFERENCES S_MEALS (id)
    ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id)
    ON DELETE CASCADE
);
CREATE UNIQUE INDEX vote_unique_datemeal_mealid_restaurantid_idx
  ON MEALS (date_meal, restaurant_id, meal_id);

CREATE TABLE vote
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  date_vote     DATE    NOT NULL,
  user_id       INTEGER NOT NULL,
  restaurant_id INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES USERS (id)
    ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id)
    ON DELETE CASCADE
);
CREATE UNIQUE INDEX vote_unique_userid_datevote_idx
  ON VOTE (user_id, date_vote);
